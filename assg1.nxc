#define BLACK_MAX 50           //light values to be computed at runtime

#define BLACK_TILE 1
#define WHITE_TILE 0
#define ON(a) (SENSOR_1 < BLACK_MAX) == a

#define THEN_GO OnFwdSync( OUT_BC, STRAIGHT_SPEED, 0);

#define TURN_SPEED 30          //
#define STRAIGHT_SPEED 40      //

#define ROT_LEFT_PIV 100       //
#define ROT_RIGHT_PIV -100     //

#define ARC_INC 10              //

#define LOCKUP_WAIT 100        //Wait time between sequential Motor commands, to prevent motor lockup

inline void StopMotors(){
      OffEx(OUT_BC, RESET_ALL);
      Wait(LOCKUP_WAIT);
}

void setup() {
     SetSensorLight(IN_1, true);
     Wait(500);
}

void rotateArcLength(int pivot, int arcLength){
     int currArcLength = 0;

     OnFwdSync(OUT_BC, TURN_SPEED, pivot);
     while(currArcLength <= arcLength){
       Wait(ARC_INC);
       currArcLength++;
     }
     StopMotors();
}

int countArcLength(int pivot){ //needs better name
     int tileColour, arcLength = 0;

     /*if( ON( BLACK_TILE ) ){
         tileColour = BLACK_TILE;
     } else {
         tileColour = WHITE_TILE;
     }*/

     tileColour = ON( BLACK_TILE ) ? BLACK_TILE : WHITE_TILE;

     OnFwdSync(OUT_BC, TURN_SPEED, pivot);
     while( ON( tileColour ) ){
       Wait(ARC_INC);
       arcLength++;
     }
     StopMotors();

     return arcLength;
}

void alignOnTile(){
     int leftDistance, rightDistance, correctionDistance, correctionDirection;

     leftDistance = countArcLength(ROT_LEFT_PIV);
     rotateArcLength(ROT_RIGHT_PIV, leftDistance);
     rightDistance = countArcLength(ROT_RIGHT_PIV);
     rotateArcLength(ROT_LEFT_PIV, rightDistance);

     if (rightDistance > leftDistance) {
         correctionDistance = rightDistance - leftDistance;
         correctionDirection = ROT_RIGHT_PIV;
     } else {
         correctionDistance = leftDistance - rightDistance;
         correctionDirection = ROT_LEFT_PIV;
     }
     rotateArcLength(correctionDirection, (correctionDistance * 10 )/ 10 );
}

task main(){
     setup();

     while(true){

         if( ON( BLACK_TILE ) ){
           alignOnTile();
           OnFwdSync( OUT_BC, STRAIGHT_SPEED, 0);
           until( ON( WHITE_TILE ) );
           StopMotors();
         }

         if( ON( WHITE_TILE ) ){
           alignOnTile();
           OnFwdSync( OUT_BC, STRAIGHT_SPEED, 0);
           until( ON( BLACK_TILE ) );
           StopMotors();
         }
     }
}
